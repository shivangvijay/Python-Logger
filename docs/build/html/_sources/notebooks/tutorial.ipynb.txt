{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Examples To Use Python Logger \n",
    "\n",
    "Python Logger is very easy to use! "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[0mm2023-03-07 18:46:12.218581 [DEBUG] String 21 98.8776768787 48 True False \n",
      "\u001b[0mm2023-03-07 18:46:12.218824 [ERROR] String 21 98.8776768787 48 True False \n",
      "\u001b[0mm2023-03-07 18:46:12.219514 [INFO] String 21 98.8776768787 48 True False \n",
      "\u001b[0mm2023-03-07 18:46:12.219968 [TRACE] String 21 98.8776768787 48 True False \n",
      "\u001b[0mm2023-03-07 18:46:12.220232 [DEBUG] String 21 98.8776768787 48 True False \n",
      "\u001b[0mm2023-03-07 18:46:12.220385 [ERROR] String 21 98.8776768787 48 True False \n",
      "\u001b[0mm2023-03-07 18:46:12.220526 [INFO] String 21 98.8776768787 48 True False \n",
      "\u001b[0mm2023-03-07 18:46:12.220672 [TRACE] String 21 98.8776768787 48 True False \n"
     ]
    }
   ],
   "source": [
    "from Logger import Logger\n",
    "\n",
    "inst = Logger()   # or you an use Logger.get_instance() for first time also\n",
    "\n",
    "inst.debug(\"String\", 21, 98.8776768787, 48, True, False)\n",
    "inst.error(\"String\", 21, 98.8776768787, 48, True, False)\n",
    "inst.info(\"String\", 21, 98.8776768787, 48, True, False)\n",
    "inst.trace(\"String\", 21, 98.8776768787, 48, True, False)\n",
    "\n",
    "\n",
    "sameInst = Logger.get_instance()\n",
    "\n",
    "\n",
    "sameInst.debug(\"String\", 21, 98.8776768787, 48, True, False)\n",
    "sameInst.error(\"String\", 21, 98.8776768787, 48, True, False)\n",
    "sameInst.info(\"String\", 21, 98.8776768787, 48, True, False)\n",
    "sameInst.trace(\"String\", 21, 98.8776768787, 48, True, False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The log file generated in the \"logs\" folder.\n",
    "\n",
    "Note:- In console, output comes with different color code of each log level. It is not observable in ipynb files."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "inst.disable_all_logs()\n",
    "inst.debug(\"Logs are disable, so these logs are not visible\")\n",
    "inst.error(\"Logs are disable, so these logs are not visible\")\n",
    "inst.info(\"Logs are disable, so these logs are not visible\")\n",
    "inst.trace(\"Logs are disable, so these logs are not visible\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[0mm2023-03-07 18:49:25.006972 [DEBUG] Logs are enable, so these logs are visible \n",
      "\u001b[0mm2023-03-07 18:49:25.007629 [ERROR] Logs are enable, so these logs are visible \n",
      "\u001b[0mm2023-03-07 18:49:25.007784 [INFO] Logs are enable, so these logs are visible \n",
      "\u001b[0mm2023-03-07 18:49:25.007958 [TRACE] Logs are enable, so these logs are visible \n"
     ]
    }
   ],
   "source": [
    "inst.enable_all_logs()\n",
    "inst.debug(\"Logs are enable, so these logs are visible\")\n",
    "inst.error(\"Logs are enable, so these logs are visible\")\n",
    "inst.info(\"Logs are enable, so these logs are visible\")\n",
    "inst.trace(\"Logs are enable, so these logs are visible\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "inst.get_current_log_level()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "6 represent enable logs.\n",
    "\n",
    "Now, change the log level to 2."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "inst.update_log_level(2)\n",
    "inst.get_current_log_level()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Only Error logs will be visible."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[0mm2023-03-07 18:49:53.538029 [ERROR] Logs are enable, so these logs are visible \n"
     ]
    }
   ],
   "source": [
    "inst.debug(\"Logs are enable, so these logs are visible\")\n",
    "inst.error(\"Logs are enable, so these logs are visible\")\n",
    "inst.info(\"Logs are enable, so these logs are visible\")\n",
    "inst.trace(\"Logs are enable, so these logs are visible\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, Change the log level to 3, upto trace logs will be visible."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "inst.update_log_level(3)\n",
    "inst.get_current_log_level()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[0mm2023-03-07 18:51:32.303946 [ERROR] Logs are enable, so these logs are visible \n",
      "\u001b[0mm2023-03-07 18:51:32.306196 [TRACE] Logs are enable, so these logs are visible \n"
     ]
    }
   ],
   "source": [
    "inst.debug(\"Logs are enable, so these logs are visible\")\n",
    "inst.error(\"Logs are enable, so these logs are visible\")\n",
    "inst.info(\"Logs are enable, so these logs are visible\")\n",
    "inst.trace(\"Logs are enable, so these logs are visible\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.0 64-bit",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.0"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "aee8b7b246df8f9039afb4144a1f6fd8d2ca17a180786b69acc140d282b71a49"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
